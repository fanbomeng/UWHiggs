# Get common recipes
recipes = ENV['fsa'] + '/PlotTools/rake/recipes.rake'
import recipes

$jobid = ENV['jobid']

# Figure out what run period we are in
$period = '8TeV'
PU = ENV['PU']
#if $jobid.include? '8TeV'
#  $period = '8TeV'
#end


################################################################################
## Sample names ################################################################
################################################################################
#
# Get sample names containing a substring
def get_sample_names(substring)
  inputs = Dir.glob("inputs/#{$jobid}/*.txt").select {|x| x.include? substring}
  inputs = inputs.map{|x| File.basename(x).sub(".txt", "")}
  return inputs
end
#
samples = Hash[
  "QCDs" => get_sample_names('QCD_Pt-20toInf_MuEnrichedPt15'),
  "Singlet" => get_sample_names('ST_t'),
  "HiggsGGLFV" => get_sample_names('GluGlu_LFV_HToMuTau'),
  "HiggsGG" => get_sample_names('GluGlu'),
  "LFVGG" => get_sample_names('GluGlu_LFV'),
  "HiggsVBF" => get_sample_names('VBF'),
  "LFVVBF" => get_sample_names('VBF_LFV_HToMuTau'),
  "WG" => get_sample_names('WG'),
  #"TTBar" =>  get_sample_names('TT_TuneCUETP8M1_13TeV-powheg-pythia8'),
  "TTBar" =>  get_sample_names('TT_TuneCUETP8M2T4_13TeV-powheg-pythia8'),
#  "TTBar" =>  get_sample_names('TT_TuneCUETP8M1_13TeV-powheg-pythia8-evtgen'),
  "WJets" =>  get_sample_names('WJetsToLNu_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8'),
  "WZeroJets" =>  get_sample_names('WJetsToLNu_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "WOneJets" =>  get_sample_names('W1JetsToLNu_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "WTwoJets" =>  get_sample_names('W2JetsToLNu_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "WThreeJets" =>  get_sample_names('W3JetsToLNu_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "WFourJets" =>  get_sample_names('W4JetsToLNu_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "DYZeroJetslow" =>  get_sample_names('DYJetsToLL_M-10to50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "DYZeroJets" =>  get_sample_names('DYJetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "DYOneJets" =>  get_sample_names('DY1JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "DYTwoJets" =>  get_sample_names('DY2JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "DYThreeJets" =>  get_sample_names('DY3JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "DYFourJets" =>  get_sample_names('DY4JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "DYAmcJets" => Array['DYJetsToLL_M-50_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8'],
  "DYJets" => Array['DY1JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8','DY2JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8','DY3JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8','DY4JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'],
  "ZTauTauZeroJetslow" =>  get_sample_names('ZTauTauJetsToLL_M-10to50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "ZTauTauZeroJets" =>  get_sample_names('ZTauTauJetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "ZTauTauOneJets" =>  get_sample_names('ZTauTau1JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "ZTauTauTwoJets" =>  get_sample_names('ZTauTau2JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "ZTauTauThreeJets" =>  get_sample_names('ZTauTau3JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "ZTauTauFourJets" =>  get_sample_names('ZTauTau4JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "HiggsHighGG" => Array['GluGlu_LFV_HToMuTau_M200_13TeV_powheg_pythia8','GluGlu_LFV_HToMuTau_M900_13TeV_powheg_pythia8','GluGlu_LFV_HToMuTau_M300_13TeV_powheg_pythia8','GluGlu_LFV_HToMuTau_M450_13TeV_powheg_pythia8','GluGlu_LFV_HToMuTau_M600_13TeV_powheg_pythia8','GluGlu_LFV_HToMuTau_M750_13TeV_powheg_pythia8','GluGlu_LFV_HToMuTau_M900_13TeV_powheg_pythia8'],
  "ZTauTauJets" => Array['ZTauTau1JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8','ZTauTau2JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8','ZTauTau3JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8','ZTauTau4JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'],
  "ZTauTauJetsRedo2To4" => Array['ZTauTau2JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8','ZTauTau3JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8','ZTauTau4JetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'],
  #"ZTauTauZeroJets" => get_sample_names('ZTauTauJetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8'),
  "ZTauTauAmcJets" => Array['ZTauTauJetsToLL_M-50_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8'],
  "ZTauTauall" => Array['ZTauTau'],
  "LFV" => Array['LFV_HTo'],
  "SMHiggsTTH" =>  Array['ttHJetToTT_M125_13TeV_amcatnloFXFX_madspin_pythia8'],
  "SMHiggsP" =>  Array['WminusHToTauTau_M125_13TeV_powheg_pythia8','WplusHToTauTau_M125_13TeV_powheg_pythia8','ZHToTauTau_M125_13TeV_powheg_pythia8','ttHJetToTT_M125_13TeV_amcatnloFXFX_madspin_pythia8'],
  "SingleTop" => get_sample_names('ST'),
  #"DiBoson" => Array['WWTo2L2Nu_13TeV-powheg','WZ_TuneCUETP8M1_13TeV-pythia8','ZZ_TuneCUETP8M1_13TeV-pythia8']
  "DiBoson" => Array['WW_TuneCUETP8M1_13TeV-pythia8','WZ_TuneCUETP8M1_13TeV-pythia8','ZZ_TuneCUETP8M1_13TeV-pythia8'],
  "DiBosonSP" => Array['WWTo2L2Nu_13TeV-powheg','WZTo3LNu_TuneCUETP8M1_13TeV-powheg-pythia8','ZZTo4L_13TeV_powheg_pythia8'],
  "DiBosonnew" => Array['VVTo2L2Nu_13TeV_amcatnloFXFX_madspin_pythia8','WZTo2L2Q_13TeV_amcatnloFXFX_madspin_pythia8','WZJToLLLNu_TuneCUETP8M1_13TeV-amcnlo-pythia8','WZTo1L1Nu2Q_13TeV_amcatnloFXFX_madspin_pythia8','WZTo1L3Nu_13TeV_amcatnloFXFX_madspin_pythia8','ZZTo2L2Q_13TeV_amcatnloFXFX_madspin_pythia8','ZZTo4L_13TeV-amcatnloFXFX-pythia8'],
  "DiBosonnew_1" => Array['VVTo2L2Nu_13TeV_amcatnloFXFX_madspin_pythia8','WWTo1L1Nu2Q_13TeV_amcatnloFXFX_madspin_pythia8','WZTo2L2Q_13TeV_amcatnloFXFX_madspin_pythia8','WZJToLLLNu_TuneCUETP8M1_13TeV-amcnlo-pythia8','WZTo1L1Nu2Q_13TeV_amcatnloFXFX_madspin_pythia8','WZTo1L3Nu_13TeV_amcatnloFXFX_madspin_pythia8','ZZTo2L2Q_13TeV_amcatnloFXFX_madspin_pythia8','ZZTo4L_13TeV-amcatnloFXFX-pythia8'],
#  "DiBoson" => Array['WZ_TuneCUETP8M1_13TeV-pythia8','ZZ_TuneCUETP8M1_13TeV-pythia8'],
  "Data2016B" => get_sample_names('data_SingleMuon_Run2016B'),
  "Data2016C" => get_sample_names('data_SingleMuon_Run2016C'),
  "Data2016D" => get_sample_names('data_SingleMuon_Run2016D'),
  "Data2016E" => get_sample_names('data_SingleMuon_Run2016E'),
  "Data2016F" => get_sample_names('data_SingleMuon_Run2016F'),
  "Data2016G" => get_sample_names('data_SingleMuon_Run2016G'),
  "Data2016H" => get_sample_names('data_SingleMuon_Run2016H'),
  "ZMuMu" => get_sample_names('ZMuMu'),
  "Embed" => get_sample_names('EmbeddingRun2016')
]

# Function to get the .root files for an analyzer and samples
def get_analyzer_results(analyzer, the_samples)
  output = Array.new
  analyzer_base = analyzer.sub('.py', '')
  the_samples.each do |sample|
    output << "results/#{$jobid}/#{analyzer_base}/#{sample}.root"
  end
  return output
end

################################################################################
## Recipes to analyze the GG channel of the LFV HToMuTau analysis
##  targets:
##     mt
################################################################################

##use $PU = false for samples with no pileup


task :AnalyzeLFVMuTau_HighMassTriggerEffiPostTune=> get_analyzer_results("AnalyzeLFVMuTau_HighMassTriggerEffiPosttune.py",samples['HiggsGG']+samples['Data2016F']+samples['WG']+samples['Data2016H']+samples['HiggsGG']+samples['SMHiggsP']+samples['Data2016G']+samples['HiggsVBF']+samples['Data2016H']+samples['Data2016F']+samples['ZTauTauZeroJets']+samples['TTBar']+samples['ZTauTauZeroJetslow']+samples['Data2016E']+samples['SingleTop']+samples['Data2016B']+samples['WOneJets']+samples['Data2016C']+samples['Data2016D']+samples['DYZeroJets']+samples['DYZeroJetslow']+samples['DYOneJets']+samples['DYTwoJets']+samples['DYThreeJets']+samples['DYFourJets']+samples['ZTauTauOneJets']+samples['ZTauTauTwoJets']+samples['ZTauTauThreeJets']+samples['ZTauTauFourJets']+samples['DiBosonnew_1'])
task :AnalyzeLFVMuTau_HighMassTriggerEffiSigPostTune=> get_analyzer_results("AnalyzeLFVMuTau_HighMassTriggerEffiPosttune.py",samples['HiggsHighGG'])

task :AnalyzeLFVMuMuTau_highmass=> get_analyzer_results("AnalyzeLFVMuMuTau.py",samples['HiggsGG']+samples['WG']+samples['HiggsVBF']+samples['Data2016H']+samples['HiggsGG']+samples['SMHiggsP']+samples['Data2016G']+samples['HiggsVBF']+samples['Data2016H']+samples['Data2016F']+samples['WZeroJets']+samples['WOneJets']+samples['WTwoJets']+samples['WThreeJets']+samples['WFourJets']+samples['ZTauTauZeroJets']+samples['TTBar']+samples['ZTauTauZeroJetslow']+samples['Data2016E']+samples['SingleTop']+samples['Data2016B']+samples['Data2016C']+samples['Data2016D']+samples['DYZeroJets']+samples['DYZeroJetslow']+samples['DYOneJets']+samples['DYTwoJets']+samples['DYThreeJets']+samples['DYFourJets']+samples['ZTauTauOneJets']+samples['ZTauTauTwoJets']+samples['ZTauTauThreeJets']+samples['ZTauTauFourJets']+samples['DiBosonnew_1'])

task :AnalyzeLFVMuMuMu_highmass=> get_analyzer_results("AnalyzeLFVMuMuMu.py",samples['Data2016B']+samples['HiggsGG']+samples['WG']+samples['HiggsVBF']+samples['Data2016H']+samples['HiggsGG']+samples['SMHiggsP']+samples['Data2016G']+samples['HiggsVBF']+samples['Data2016H']+samples['Data2016F']+samples['WZeroJets']+samples['WOneJets']+samples['WTwoJets']+samples['WThreeJets']+samples['WFourJets']+samples['ZTauTauZeroJets']+samples['TTBar']+samples['ZTauTauZeroJetslow']+samples['Data2016E']+samples['SingleTop']+samples['Data2016B']+samples['Data2016C']+samples['Data2016D']+samples['DYZeroJets']+samples['DYZeroJetslow']+samples['DYOneJets']+samples['DYTwoJets']+samples['DYThreeJets']+samples['DYFourJets']+samples['ZTauTauOneJets']+samples['ZTauTauTwoJets']+samples['ZTauTauThreeJets']+samples['ZTauTauFourJets']+samples['DiBosonnew_1'])


